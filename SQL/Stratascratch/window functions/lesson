Types of Window functions

Parameter Explanation

Let us understand the arguments used in the above syntax:

window_function: It indicates the name of your window function.

ALL: It is an optional keyword that is used to count all values along with duplicates. We cannot use the DISTINCT keyword in window functions.

Expression: It is the name of the column or expression on which window functions is operated. In other words, it is the column name for which we calculate an 
aggregated value.

OVER: It specifies the window clauses for aggregate functions. It mainly contains two expressions partition by and order by, and it always has an opening and 
closing parenthesis even there is no expression.

PARTITION BY: This clause divides the rows into partitions, and then a window function is operated on each partition. Here we need to provide columns for the 
partition after the PARTITION BY clause. If we want to specify more than one column, we must separate them by a comma operator. 
SQL Server will group the entire table when this clause is not specified, and values will be aggregated accordingly.

ORDER BY: It is used to specify the order of rows within each partition. When this clause is not defined, SQL Server will use the ORDER BY for the entire table.



Aggregate Window Functions:

SUM(): SELECT SUM(Attendance) FROM Class;
MAX(): SELECT MAX(Attendance) FROM Class;
MIN(): SELECT MIN(Attendance) FROM Class;
AVG(): SELECT AVG(Attendance) FROM Class;
COUNT(): SELECT COUNT(StudentName) FROM Class;


Ranking Window Functions: The RANKING function ranks the values in a defined column and categorizes them based on their rank. 
The following are the ranking functions supported in SQL Server:



RANK():

SELECT first_name, last_name, city,     
RANK () OVER (ORDER BY city) AS Rank_No     
FROM rank_demo;   


DENSE_RANK():

SELECT first_name, last_name, city,     
DENSE_RANK() OVER (ORDER BY city) AS Rank_No     
FROM rank_demo;   


ROW_NUMBER():

SELECT first_name, last_name, city,     
ROW_NUMBER() OVER (ORDER BY city) AS Rank_No     
FROM rank_demo;


NTILE():

SELECT first_name, last_name, city,     
NTILE(3) OVER ( ORDER BY city) AS Rank_No     
FROM rank_demo;  



Value Window Functions: SQL Server used this function to get the first, last, previous, and next values in a table. 
It mainly contains these functions: LAG(), LEAD(), FIRST_VALUE(), and LAST_VALUE().

LAG():

SELECT Year, Prod_name, Country, Sales,       
LAG(Sales, 1) OVER (PARTITION BY Year ORDER BY Country) AS Previous_Sale      
FROM Product_Sales;  

LEAD():

SELECT Year, Prod_name, Country, Sales,       
LEAD(Sales,1) OVER (PARTITION BY Year ORDER BY Country) AS Next_Sale      
FROM Product_Sales;    


FIRST_VALUE():
LAST_VALUE():
